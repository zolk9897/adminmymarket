export default {
  title: 'Доставка и оплата',
  page: 'ui_kit',
  groups: [
    {
      name: 'ui_kit',
      tabName: 'Доставка и оплата',
      fields: ['title_block', 'body_block'],
    },
  ],
  fields: [
    {
      name: 'title_block',
      type: 'div',
      cssClass: [
        'bg-white',
        'p-6',
        'border-b-2',
        'border-solid',
        'border-neutral-100',
        'flex',
        'justify-between',
      ],
      fields: ['title', 'info_switch'],
    },
    {
      text: 'Ui-Kit',
      name: 'title',
      type: 'label',
      cssClass: ['font-medium', 'text-xl'],
    },
    {
      title: '',
      titleClass: ['font-medium'],
      name: 'info_switch',
      value: false,
      type: 'boolean',
      viewType: 'switch',
    },
    {
      name: 'body_block',
      type: 'div',
      cssClass: [
        'bg-white',
        'p-6',
        'border-b-2',
        'border-solid',
        'border-neutral-100',
      ],
      fields: ['buttons_block', 'inputs_block', 'handlers_block'],
    },
    {
      name: 'buttons_block',
      type: 'div',
      fields: ['buttons_title_block', 'buttons_body'],
    },
    {
      name: 'buttons_title_block',
      type: 'div',
      fields: ['buttons_title'],
    },
    {
      text: 'Buttons',
      name: 'buttons_title',
      type: 'label',
      cssClass: ['font-medium', 'text-xl'],
    },
    {
      name: 'buttons_body',
      type: 'div',
      cssClass: ['flex', 'gap-4', 'flex-wrap', 'my-[20px]'],
      fields: ['button_col_1', 'button_col_2', 'button_col_3'],
    },
    {
      name: 'button_col_1',
      type: 'div',
      fields: [
        'button_dashed_block',
        'button_text_block',
        'button_styleClass_block',
      ],
      cssClass: ['flex', 'gap-4', 'flex-col'],
    },
    {
      name: 'button_dashed_block',
      type: 'code',
      info: 'buttonType: "dashed"',
      infoTitle: 'buttonType',
      cssClass: ['flex', 'items-center', 'gap-2'],
      fields: [
        'button_large_dashed',
        'button_default_dashed',
        'button_small_dashed',
      ],
    },
    {
      type: 'button',
      value: 'large dashed',
      name: 'button_large_dashed',
      size: 'large',
      buttonType: 'dashed',
    },
    {
      type: 'button',
      value: 'default dashed',
      name: 'button_default_dashed',
      size: 'default',
      buttonType: 'dashed',
    },
    {
      type: 'button',
      value: 'small dashed',
      name: 'button_small_dashed',
      size: 'small',
      buttonType: 'dashed',
    },
    {
      name: 'button_text_block',
      type: 'code',
      info: 'buttonType: "text"',
      infoTitle: 'buttonType',
      cssClass: ['flex', 'items-center', 'gap-2'],
      fields: ['button_large_text', 'button_default_text', 'button_small_text'],
    },
    {
      type: 'button',
      value: 'large text',
      name: 'button_large_text',
      size: 'large',
      buttonType: 'text',
    },
    {
      type: 'button',
      value: 'default text',
      name: 'button_default_text',
      size: 'default',
      buttonType: 'text',
    },
    {
      type: 'button',
      value: 'small text',
      name: 'button_small_text',
      size: 'small',
      buttonType: 'text',
    },
    {
      name: 'button_styleClass_block',
      type: 'code',
      info: 'style параметр позволяет указывать стили, а праметр cssClass поддерживает классы в том числе и tailwind. Всегда лучше использовать tailwind классы. ',
      infoTitle: 'style и cssClass',
      cssClass: ['flex', 'items-center', 'gap-2'],
      fields: ['button_styleClass'],
    },
    {
      type: 'button',
      value: 'large text',
      name: 'button_styleClass',
      size: 'large',
      style: {
        fontSize: '1.25rem',
        lineHeight: '1.75rem',
      },
      cssClass: ['w-[200px]'],
      buttonType: 'primary',
    },
    {
      name: 'button_col_2',
      type: 'div',
      fields: [
        'button_link_block',
        'button_ghost_block',
        'button_disabled_block',
      ],
      cssClass: ['flex', 'gap-4', 'flex-col'],
    },
    {
      name: 'button_link_block',
      type: 'code',
      info: 'buttonType: "link"',
      infoTitle: 'buttonType',
      cssClass: ['flex', 'items-center', 'gap-2'],
      fields: ['button_large_link', 'button_default_link', 'button_small_link'],
    },
    {
      type: 'button',
      value: 'large link',
      name: 'button_large_link',
      size: 'large',
      buttonType: 'link',
    },
    {
      type: 'button',
      value: 'default link',
      name: 'button_default_link',
      size: 'default',
      buttonType: 'link',
    },
    {
      type: 'button',
      value: 'small link',
      name: 'button_small_link',
      size: 'small',
      buttonType: 'link',
    },
    {
      name: 'button_ghost_block',
      type: 'code',
      info: 'buttonType: "ghost"',
      infoTitle: 'buttonType',
      cssClass: ['flex', 'items-center', 'gap-2'],
      fields: [
        'button_large_ghost',
        'button_default_ghost',
        'button_small_ghost',
      ],
    },
    {
      type: 'button',
      value: 'large ghost',
      name: 'button_large_ghost',
      size: 'large',
      buttonType: 'ghost',
    },
    {
      type: 'button',
      value: 'default ghost',
      name: 'button_default_ghost',
      size: 'default',
      buttonType: 'ghost',
    },
    {
      type: 'button',
      value: 'small ghost',
      name: 'button_small_ghost',
      size: 'small',
      buttonType: 'ghost',
    },
    {
      name: 'button_disabled_block',
      type: 'code',
      info: 'disabled: true/false',
      infoTitle: 'disabled',
      cssClass: ['grid', 'grid-cols-3', 'gap-2', 'row-2'],
      fields: [
        'button_disabled_dashed',
        'button_disabled_text',
        'button_disabled_link',
        'button_disabled_ghost',
        'button_disabled_primary',
        'button_disabled_danger',
      ],
    },
    {
      type: 'button',
      value: 'disabled dashed',
      name: 'button_disabled_dashed',
      buttonType: 'dashed',
      cssClass: ['w-[120px]'],
      disabled: true,
    },
    {
      type: 'button',
      value: 'disabled text',
      name: 'button_disabled_text',
      buttonType: 'text',
      cssClass: ['w-[120px]'],
      disabled: true,
    },
    {
      type: 'button',
      value: 'disabled link',
      name: 'button_disabled_link',
      buttonType: 'link',
      cssClass: ['w-[120px]'],
      disabled: true,
    },
    {
      type: 'button',
      value: 'disabled ghost',
      name: 'button_disabled_ghost',
      buttonType: 'ghost',
      cssClass: ['w-[120px]'],
      disabled: true,
    },
    {
      type: 'button',
      value: 'disabled primary',
      name: 'button_disabled_primary',
      buttonType: 'primary',
      cssClass: ['w-[120px]'],
      disabled: true,
    },
    {
      type: 'button',
      value: 'disabled danger',
      name: 'button_disabled_danger',
      buttonType: 'danger',
      cssClass: ['w-[120px]'],
      disabled: true,
    },
    {
      name: 'button_col_3',
      type: 'div',
      fields: [
        'button_primary_block',
        'button_danger_block',
        'button_icon_block',
      ],
      cssClass: ['flex', 'gap-4', 'flex-col'],
    },
    {
      name: 'button_primary_block',
      type: 'code',
      cssClass: ['flex', 'items-center', 'gap-2'],
      info: 'buttonType: "primary"',
      infoTitle: 'buttonType ',
      value: null,
      fields: [
        'button_large_primary',
        'button_default_primary',
        'button_small_primary',
      ],
    },
    {
      type: 'button',
      value: 'large primary',
      name: 'button_large_primary',
      buttonType: 'primary',
      size: 'large',
    },
    {
      type: 'button',
      value: 'default primary',
      name: 'button_default_primary',
      buttonType: 'primary',
      size: 'default',
    },
    {
      type: 'button',
      value: 'small primary',
      name: 'button_small_primary',
      buttonType: 'primary',
      size: 'small',
    },
    {
      name: 'button_danger_block',
      type: 'code',
      info: 'buttonType: "danger"',
      infoTitle: 'buttonType',
      cssClass: ['flex', 'items-center', 'gap-2'],
      fields: [
        'button_large_danger',
        'button_default_danger',
        'button_small_danger',
      ],
    },
    {
      type: 'button',
      value: 'large danger',
      name: 'button_large_danger',
      size: 'large',
      buttonType: 'danger',
    },
    {
      type: 'button',
      value: 'default danger',
      name: 'button_default_danger',
      size: 'default',
      buttonType: 'danger',
    },
    {
      type: 'button',
      value: 'small danger',
      name: 'button_small_danger',
      size: 'small',
      buttonType: 'danger',
    },
    {
      name: 'button_icon_block',
      type: 'code',
      info: 'icon.name параметр позволяет добавлять в кнопку иконку из коллекции font awesome',
      infoTitle: 'icon',
      cssClass: ['flex', 'items-center', 'gap-2'],
      fields: ['button_icon'],
    },
    {
      type: 'button',
      value: 'icon button',
      name: 'button_icon',
      icon: { name: 'fa-solid fa-code' },
      buttonType: 'danger',
    },
    {
      name: 'inputs_block',
      type: 'div',
      fields: ['inputs_title_block', 'inputs_body'],
    },
    {
      name: 'inputs_title_block',
      type: 'div',
      fields: ['inputs_title'],
    },
    {
      text: 'Inputs',
      name: 'inputs_title',
      type: 'label',
      cssClass: ['font-medium', 'text-xl'],
    },
    {
      name: 'inputs_body',
      type: 'div',
      cssClass: ['flex', 'gap-4', 'flex-wrap', 'my-[20px]'],
      fields: ['inputs_col_1', 'inputs_col_2', 'inputs_col_3'],
    },
    {
      name: 'inputs_col_1',
      type: 'div',
      fields: ['input_text_block', 'input_vmask_block'],
      cssClass: ['flex', 'gap-4', 'flex-col'],
    },
    {
      name: 'input_text_block',
      type: 'code',
      info: 'format: "text"',
      infoTitle: 'format',
      cssClass: ['flex', 'flex-col', 'gap-2'],
      fields: ['input_large_text', 'input_default_text', 'input_small_text'],
    },
    {
      type: 'input',
      description: 'large text',
      name: 'input_large_text',
      size: 'large',
      format: 'text',
    },
    {
      type: 'input',
      description: 'default text',
      name: 'input_default_text',
      size: 'default',
      format: 'text',
    },
    {
      type: 'input',
      description: 'small text',
      name: 'input_small_text',
      size: 'small',
      format: 'text',
    },
    {
      name: 'input_vmask_block',
      type: 'code',
      info: 'mask: "+7 (###) ###-##-##"',
      infoTitle: 'vmask',
      cssClass: ['flex', 'flex-col', 'gap-2'],
      fields: ['input_vmask'],
    },
    {
      type: 'input',
      description: ' vmask',
      name: 'input_vmask',
      size: 'large',
      format: 'text',
      mask: '+7 (###) ###-##-##',
    },
    {
      name: 'inputs_col_2',
      type: 'div',
      fields: ['input_password_block', 'input_subtitle_block'],
      cssClass: ['flex', 'gap-4', 'flex-col'],
    },
    {
      name: 'input_password_block',
      type: 'code',
      info: 'format: "password"',
      infoTitle: 'format',
      cssClass: ['flex', 'flex-col', 'gap-2'],
      fields: [
        'input_large_password',
        'input_default_password',
        'input_small_password',
      ],
    },
    {
      type: 'input',
      description: 'large password',
      name: 'input_large_password',
      size: 'large',
      format: 'password',
    },
    {
      type: 'input',
      description: 'default password',
      name: 'input_default_password',
      size: 'default',
      format: 'password',
    },
    {
      type: 'input',
      description: 'small password',
      name: 'input_small_password',
      size: 'small',
      format: 'password',
    },
    {
      name: 'input_subtitle_block',
      type: 'code',
      info: 'subtitle: text указывает текст подзаголовка, style позволяет указывать стили, а праметр cssClass поддерживает классы в том числе и tailwind. Всегда лучше использовать tailwind классы. ',
      infoTitle: 'subtitle',
      cssClass: ['flex', 'flex-col', 'gap-2'],
      fields: ['input_subtitle'],
    },
    {
      type: 'input',
      description: 'large subtitle',
      name: 'input_subtitle',
      size: 'large',
      format: 'text',
      subtitle: {
        text: 'subtitle',
        style: { fontSize: '20px' },
        cssClass: 'text-red-600',
      },
    },
    {
      name: 'inputs_col_3',
      type: 'div',
      fields: ['input_number_block', 'input_style_block'],
      cssClass: ['flex', 'gap-4', 'flex-col'],
    },
    {
      name: 'input_number_block',
      type: 'code',
      info: 'format: "number"',
      infoTitle: 'format',
      cssClass: ['flex', 'flex-col', 'gap-2'],
      fields: [
        'input_large_number',
        'input_default_number',
        'input_small_number',
      ],
    },
    {
      type: 'input',
      description: 'large number',
      name: 'input_large_number',
      size: 'large',
      format: 'number',
    },
    {
      type: 'input',
      description: 'default number',
      name: 'input_default_number',
      size: 'default',
      format: 'number',
    },
    {
      type: 'input',
      description: 'small number',
      name: 'input_small_number',
      size: 'small',
      format: 'number',
    },
    {
      name: 'input_style_block',
      type: 'code',
      info: 'style параметр позволяет указывать стили, а праметр cssClass поддерживает классы в том числе и tailwind. Всегда лучше использовать tailwind классы. ',
      infoTitle: 'style',
      cssClass: ['flex', 'flex-col', 'gap-2'],
      fields: ['input_style'],
    },
    {
      type: 'input',
      description: 'style',
      name: 'input_style',
      format: 'text',
      style: { width: '250px' },
      cssClass: ['font-black'],
    },
    {
      name: 'handlers_block',
      type: 'div',
      fields: ['handlers_title_block', 'handlers_body'],
    },
    {
      name: 'handlers_title_block',
      type: 'div',
      fields: ['handlers_title'],
    },
    {
      text: 'Handlers',
      name: 'handlers_title',
      type: 'label',
      cssClass: ['font-medium', 'text-xl'],
    },
    {
      name: 'handlers_body',
      type: 'div',
      cssClass: ['flex', 'gap-4', 'flex-wrap', 'my-[20px]'],
      fields: ['handler_col_1', 'handler_col_2', 'handler_col_3'],
    },
    {
      name: 'handler_col_1',
      type: 'div',
      fields: [
        'handler_push_data_block',
        'handler_edit_field_block',
        'handler_add_data_to_table_field_block',
      ],
      cssClass: ['flex', 'gap-4', 'flex-col'],
    },
    {
      name: 'handler_push_data_block',
      type: 'code',
      info: 'При использованнии данного обработчика отправляет форму по ссылке "https://ekat.sergeivl.ru/api/example/ok". Принимает параметры "pageName" и "blockName".',
      infoTitle: 'pushData',
      cssClass: ['flex', 'items-center', 'gap-2'],
      fields: ['push_data_button'],
    },
    {
      type: 'button',
      value: 'pushData',
      name: 'push_data_button',
      buttonType: 'primary',
      handlers: [
        {
          name: 'pushData',
          params: {
            pageName: 'ui_kit',
            blockName: 'input_password_block',
          },
        },
      ],
    },
    {
      name: 'handler_edit_field_block',
      type: 'code',
      info: 'Данный обработчик позволяет менять или добовлять свойства различным объектам. Принимает параметры "pageName", "blockName", "fieldName" и "value" в качестве которого указываются новые параметры',
      infoTitle: 'editField',
      cssClass: ['flex', 'items-center', 'gap-2'],
      fields: [
        'edit_field_button_1',
        'edit_field_button_2',
        'edit_field_block',
      ],
    },
    {
      type: 'button',
      value: 'edit_field',
      name: 'edit_field_button_1',
      buttonType: 'primary',
      handlers: [
        {
          name: 'editField',
          params: {
            pageName: 'ui_kit',
            blockName: 'edit_field_block',
            fieldName: 'style',
            value: { display: 'none' },
          },
        },
      ],
    },
    {
      type: 'button',
      value: 'edit_field',
      name: 'edit_field_button_2',
      buttonType: 'primary',
      handlers: [
        {
          name: 'editField',
          params: {
            pageName: 'ui_kit',
            blockName: 'edit_field_block',
            fieldName: 'style',
            value: { display: 'block' },
          },
        },
      ],
    },
    {
      name: 'edit_field_block',
      type: 'div',
      fields: [],
      style: { height: '50px', width: '100px', backgroundColor: 'red' },
    },
    {
      name: 'handler_col_2',
      type: 'div',
      fields: ['validate_handler_block', 'handler_go_back_block'],
      cssClass: ['flex', 'gap-4', 'flex-col'],
    },
    {
      name: 'handler_reset_data_block',
      type: 'code',
      info: 'Данный обработчик позволяет сбрасывать значение полей. Принимает параметры "pageName", "blockName"',
      infoTitle: 'resetBlockData',
      cssClass: ['flex', 'items-center', 'gap-2'],
      fields: ['reset_data_button', 'reset_data_input'],
    },
    {
      type: 'button',
      value: 'reset_data',
      name: 'reset_data_button',
      buttonType: 'primary',
      handlers: [
        {
          name: 'resetBlockData',
          params: {
            pageName: 'ui_kit',
            blockName: 'handler_reset_data_block',
          },
        },
      ],
    },
    {
      type: 'input',
      name: 'reset_data_input',
      format: 'text',
      value: 'text',
    },
    {
      name: 'validate_handler_block',
      type: 'code',
      info: 'Данный обработчик позволяет валидировать определенные поля. Для этого необходимо назначить необходимому полю параметр validate и указать необходмые правила. Подробнее смотреть библиотеку yup. Принимает параметры "pageName", "blockName"',
      infoTitle: 'validateHandler',
      cssClass: ['flex', 'items-center', 'gap-2'],
      fields: ['validate_handler_button', 'validate_handler_input'],
    },
    {
      type: 'button',
      value: 'validate_handler',
      name: 'validate_handler_button',
      buttonType: 'primary',
      handlers: [
        {
          name: 'validateHandler',
          params: {
            pageName: 'ui_kit',
            blockName: 'validate_handler_block',
          },
        },
      ],
    },
    {
      type: 'input',
      name: 'validate_handler_input',
      format: 'text',
      validation: {
        rules: [
          {
            type: 'required',
          },
        ],
      },
    },
    {
      name: 'handler_go_back_block',
      type: 'code',
      info: 'Данный обработчик позволяет перейти на предыдущую страницу',
      infoTitle: 'goBack',
      cssClass: ['flex', 'items-center', 'gap-2'],
      fields: ['go_back_button'],
    },
    {
      type: 'button',
      value: 'go_back',
      name: 'go_back_button',
      buttonType: 'primary',
      handlers: [
        {
          name: 'goBack',
        },
      ],
    },
    {
      name: 'handler_col_3',
      type: 'div',
      fields: ['handler_go_route_block', 'handler_reset_data_block'],
      cssClass: ['flex', 'gap-4', 'flex-col'],
    },
    {
      name: 'handler_go_route_block',
      type: 'code',
      info: 'Данный обработчик позволяет перейти на страницу с добавлением параметров. Принимает параметры "name" в качестве имени страницы и "query" в качестве параметров к странице',
      infoTitle: 'goRoute',
      cssClass: ['flex', 'items-center', 'gap-2'],
      fields: ['go_route_button'],
    },
    {
      type: 'button',
      value: 'go_route',
      name: 'go_route_button',
      buttonType: 'primary',
      handlers: [
        {
          name: 'goRoute',
          params: {
            name: 'complaints',
            query: { id: '1' },
          },
        },
      ],
    },
    {
      name: 'handler_add_data_to_table_field_block',
      type: 'code',
      info: 'Данный обработчик позволяет добавить поле в таблицу. Принимает параметры "pageName", "tableName" и "data" в качестве объекта где ключом является имя столбца, а значением имя поля.',
      infoTitle: 'addDataToTableField',
      cssClass: ['flex', 'flex-col', 'items-center', 'gap-2'],
      fields: [
        'add_data_to_table_field_button',
        'name_legal_input',
        'price_legal_input',
        'add_data_to_table_table',
      ],
    },
    {
      type: 'button',
      value: 'add_data_to_table_field',
      name: 'add_data_to_table_field_button',
      buttonType: 'primary',
      handlers: [
        {
          name: 'addDataToTableField',
          params: {
            pageName: 'ui_kit',
            tableName: 'add_data_to_table_table',
            data: {
              name: 'name_legal_input',
              debt: 'price_legal_input',
            },
          },
        },
      ],
    },
    {
      type: 'input',
      name: 'name_legal_input',
      format: 'text',
      value: 'text',
    },
    {
      type: 'input',
      name: 'price_legal_input',
      format: 'text',
      value: 'text',
    },
    {
      name: 'add_data_to_table_table',
      type: 'table',
      config: {},
      data: [
        {
          name: 'DigitalOcean',
          debt: 1000,
          admin: false,
        },
        {
          name: 'DigitalOcean',
          debt: 1500,
          admin: true,
        },
        {
          name: 'DigitalOcean',
          debt: 1000,
          admin: false,
        },
      ],
      columns: [
        {
          title: 'Название',
          dataIndex: 'name',
          key: 'name',
          widget: {
            name: 'text',
          },
        },
        {
          title: 'Не закрыто актами, ₽',
          dataIndex: 'debt',
          key: 'debt',
          widget: {
            name: 'text',
          },
        },
        {
          title: 'Админ',
          dataIndex: 'admin',
          key: 'admin',
          widget: {
            name: 'checkbox',
          },
          changeHandlers: [
            {
              name: 'sendOneFieldFromTable',
              params: {
                endpoint: '/changeUserRoleCell',
                fullRow: true,
              },
            },
          ],
        },
      ],
    },
  ],
}
